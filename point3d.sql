-- clean up
drop type if exists point3d cascade;
drop table if exists points cascade;
drop function if exists point3d_in cascade;
drop function if exists point3d_out cascade;
drop function if exists distance3d cascade;
drop function if exists one_to_all_others cascade;

-- first create a shell type to refer to
create type point3d;

-- the input function 'point3d_in' takes a null-terminated string (the textual
-- representation of the type) and turns it into the internal (in memory)
-- representation. NOTE: check the correct path to the compiled files
create function point3d_in(cstring)
	returns point3d
	as '/home/mushfiq/proj4/point3d'
	language c immutable strict;

-- the output function 'point3d_out' takes the internal representation and
-- converts it into the textual representation. NOTE: check the correct path to
-- the compiled files
create function point3d_out(point3d)
	returns cstring
	as '/home/mushfiq/proj4/point3d'
	language c immutable strict;

-- finally create the actual type linking the input output functions and
-- stating the internal length which specifies the size of the memory block
-- required to hold the type (24 bits for 3 bytes each)
create type point3d (
   internallength = 24,
   input = point3d_in,
   output = point3d_out,
   alignment = double
);

-- create table for points
create table points (
	p point3d
);

insert into points
values
('(-63.91,0.51,-20.28)'),
('(57.07,-72.70,-1.19)'),
('(-35.25,12.16,41.00)'),
('(-23.34,48.44,31.09)'),
('(36.10,-75.22,-1.79)'),
('(-63.71,94.41,-65.74)'),
('(-73.50,58.67,-71.96)'),
('(-21.95,84.23,-60.07)'),
('(-37.91,-5.07,63.12)'),
('(-55.53,94.17,-78.86)'),
('(-33.87,27.29,50.70)'),
('(99.98,68.64,4.55)'),
('(-96.53,55.92,-68.24)'),
('(-26.10,44.95,37.59)'),
('(74.76,-28.64,-92.08)'),
('(-55.42,-96.73,21.50)'),
('(-54.24,25.24,-48.78)'),
('(5.59,-74.44,81.68)'),
('(15.06,-16.35,34.61)'),
('(7.36,-64.62,61.37)'),
('(91.58,-36.22,26.51)'),
('(93.26,-16.11,51.45)'),
('(88.85,91.26,-74.16)'),
('(55.90,61.25,-91.26)'),
('(-50.65,-73.45,-10.38)'),
('(45.87,-33.76,-42.62)'),
('(15.50,60.82,-9.20)'),
('(30.75,-10.43,24.18)'),
('(-90.66,37.86,97.71)'),
('(61.70,-67.00,-0.34)'),
('(47.41,47.54,-98.78)'),
('(-47.34,37.85,-82.35)'),
('(-67.93,45.78,62.64)'),
('(88.03,21.26,50.15)'),
('(38.52,54.81,-7.52)'),
('(77.33,72.35,15.19)'),
('(99.04,-36.15,-20.89)'),
('(-81.25,0.32,77.57)'),
('(57.51,76.95,60.77)'),
('(29.02,-54.37,-29.85)'),
('(-15.85,-4.15,-95.38)'),
('(72.95,45.15,-51.95)'),
('(82.81,81.32,-16.62)'),
('(-51.40,64.65,28.60)'),
('(-19.90,-93.14,-68.85)'),
('(-85.97,98.70,-10.82)'),
('(17.01,73.97,81.20)'),
('(9.20,-45.25,-84.35)'),
('(-73.79,-69.84,-37.24)'),
('(69.89,52.49,-4.99)'),
('(24.02,12.34,91.66)'),
('(76.04,77.72,12.39)'),
('(6.10,-85.73,84.39)'),
('(87.75,-19.24,-52.06)'),
('(91.68,66.16,-7.39)'),
('(-61.01,-67.95,63.78)'),
('(-94.68,-29.01,-64.56)'),
('(75.63,-35.32,44.54)'),
('(98.03,-51.61,-57.20)'),
('(16.41,-18.59,-68.25)'),
('(-84.42,32.25,-75.46)'),
('(14.76,-4.72,49.74)'),
('(66.52,-16.36,22.27)'),
('(94.09,34.28,-82.25)'),
('(55.06,-15.30,56.60)'),
('(-82.83,-34.40,86.23)'),
('(-6.46,30.25,73.74)'),
('(-72.05,-22.35,12.24)'),
('(77.17,-4.64,-89.43)'),
('(-86.37,-60.14,79.92)'),
('(-70.48,-8.33,-76.66)'),
('(-11.78,-23.61,94.43)'),
('(-87.54,49.79,-37.43)'),
('(-71.42,74.18,-97.68)'),
('(-97.06,-21.52,26.66)'),
('(33.62,8.11,92.21)'),
('(-82.55,94.60,76.31)'),
('(8.24,-26.21,19.14)'),
('(60.98,74.97,20.67)'),
('(-34.23,-13.10,-79.82)'),
('(17.34,-96.08,-66.14)'),
('(88.04,-72.97,47.46)'),
('(-66.08,47.84,67.84)'),
('(17.43,-0.62,87.77)'),
('(-56.34,-14.31,-31.46)'),
('(65.64,-1.03,-26.06)'),
('(30.70,-33.84,28.30)'),
('(59.53,-81.63,84.88)'),
('(80.03,-98.27,71.44)'),
('(-75.83,74.53,-25.15)'),
('(-60.36,17.18,23.79)'),
('(-48.26,30.15,69.15)'),
('(-86.64,-60.06,-74.26)'),
('(-85.19,91.92,80.12)'),
('(51.27,-30.19,75.80)'),
('(64.20,-87.88,22.66)'),
('(-93.46,-47.28,-67.43)'),
('(73.38,42.97,3.22)'),
('(36.53,22.53,74.29)'),
('(-32.36,51.16,-36.57)'),
('(-50.96,-18.45,-36.99)'),
('(-74.89,70.83,-20.35)'),
('(13.73,83.69,47.35)'),
('(-61.71,-90.81,41.70)'),
('(-71.76,73.31,-81.57)'),
('(64.45,-74.32,25.69)'),
('(-12.65,36.36,54.09)'),
('(-31.57,39.52,36.27)'),
('(48.48,-77.18,-19.10)'),
('(-50.15,57.51,26.70)'),
('(-43.93,55.21,-35.49)'),
('(-34.08,62.44,-48.86)'),
('(-36.38,56.12,81.18)'),
('(-99.69,46.50,-15.75)'),
('(-27.23,70.11,-28.06)'),
('(43.44,-59.21,91.34)'),
('(64.92,-28.38,81.19)'),
('(-17.73,22.34,32.72)'),
('(-26.93,94.84,22.39)'),
('(-94.58,30.47,22.24)'),
('(53.81,39.39,85.08)'),
('(77.58,-48.36,87.65)'),
('(-8.00,94.44,71.57)'),
('(-4.27,26.30,82.72)'),
('(-47.32,-64.95,56.21)'),
('(97.78,23.62,71.29)'),
('(4.41,-12.23,86.98)'),
('(-77.53,10.89,3.32)'),
('(-37.12,62.04,-92.67)'),
('(14.98,-99.99,68.69)'),
('(42.16,69.42,21.64)'),
('(-45.42,-82.30,39.89)'),
('(27.80,-65.64,62.74)'),
('(-64.52,-15.10,-98.70)'),
('(-61.55,10.39,-8.88)'),
('(-36.44,-53.89,26.12)'),
('(28.60,93.45,63.78)'),
('(-49.60,-34.02,96.29)'),
('(-0.37,-39.40,64.90)'),
('(20.48,-11.08,57.38)'),
('(-87.31,-86.24,5.21)'),
('(83.81,-71.02,-84.69)'),
('(63.11,67.33,79.89)'),
('(-62.38,53.11,-86.68)'),
('(-64.14,-33.42,-36.91)'),
('(9.66,-81.36,50.60)'),
('(-6.39,-58.15,-22.27)'),
('(-68.43,75.47,-33.65)'),
('(-53.88,85.44,-94.40)'),
('(-61.39,-7.78,-19.97)');

-- create table for SDH
create table sdh (
	test float
);

-- function to calculate 3d spatial distance
create function distance3d(point3d, point3d)
returns cstring
as '/home/mushfiq/proj4/point3d'
language c immutable strict;

-- select distance3d('(2,3,4)'::point3d, '(1,2,3)'::point3d);
select distance3d(p, '(1,2,3)'::point3d) from points;


-- function to calculate of given point to all other points
create function one_to_all_others (i point3d)
returns integer
language plpgsql
as $$
declare
	query varchar := '';
begin
	query = (select array(select x - nth_value(x,i+1) over (order by x) from points offset i));
	raise notice '%', query;
	return i;
end;
$$;

select one_to_all_others(1);
